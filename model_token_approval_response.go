/*
Blockdaemon DeFi API

The Blockdaemon DeFi API provides a single interface to a multitude of DeFi projects and blockchains

API version: 1.0.0
Contact: info@blockdaemon.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenApprovalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenApprovalResponse{}

// TokenApprovalResponse A response containing details about modifying or deleting a token approval.
type TokenApprovalResponse struct {
	// The unique identifier of a blockchain in CAIP-2 notation.
	ChainID string `json:"chainID" validate:"regexp=^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}$"`
	// The address of an account.
	AccountAddress string `json:"accountAddress"`
	// The address of an account.
	SpenderAddress string `json:"spenderAddress"`
	Token Token `json:"token"`
	// The amount of a token represented as a string.
	FromApprovedAmount string `json:"fromApprovedAmount" validate:"regexp=^([1-9][0-9]*|0)(\\\\.[0-9]+)?$"`
	// The amount of a token represented as a string.
	ToApprovedAmount string `json:"toApprovedAmount" validate:"regexp=^([1-9][0-9]*|0)(\\\\.[0-9]+)?$"`
	TransactionRequest TransactionRequest `json:"transactionRequest"`
}

type _TokenApprovalResponse TokenApprovalResponse

// NewTokenApprovalResponse instantiates a new TokenApprovalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenApprovalResponse(chainID string, accountAddress string, spenderAddress string, token Token, fromApprovedAmount string, toApprovedAmount string, transactionRequest TransactionRequest) *TokenApprovalResponse {
	this := TokenApprovalResponse{}
	this.ChainID = chainID
	this.AccountAddress = accountAddress
	this.SpenderAddress = spenderAddress
	this.Token = token
	this.FromApprovedAmount = fromApprovedAmount
	this.ToApprovedAmount = toApprovedAmount
	this.TransactionRequest = transactionRequest
	return &this
}

// NewTokenApprovalResponseWithDefaults instantiates a new TokenApprovalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenApprovalResponseWithDefaults() *TokenApprovalResponse {
	this := TokenApprovalResponse{}
	return &this
}

// GetChainID returns the ChainID field value
func (o *TokenApprovalResponse) GetChainID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainID
}

// GetChainIDOk returns a tuple with the ChainID field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetChainIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainID, true
}

// SetChainID sets field value
func (o *TokenApprovalResponse) SetChainID(v string) {
	o.ChainID = v
}

// GetAccountAddress returns the AccountAddress field value
func (o *TokenApprovalResponse) GetAccountAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountAddress
}

// GetAccountAddressOk returns a tuple with the AccountAddress field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetAccountAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountAddress, true
}

// SetAccountAddress sets field value
func (o *TokenApprovalResponse) SetAccountAddress(v string) {
	o.AccountAddress = v
}

// GetSpenderAddress returns the SpenderAddress field value
func (o *TokenApprovalResponse) GetSpenderAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpenderAddress
}

// GetSpenderAddressOk returns a tuple with the SpenderAddress field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetSpenderAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpenderAddress, true
}

// SetSpenderAddress sets field value
func (o *TokenApprovalResponse) SetSpenderAddress(v string) {
	o.SpenderAddress = v
}

// GetToken returns the Token field value
func (o *TokenApprovalResponse) GetToken() Token {
	if o == nil {
		var ret Token
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetTokenOk() (*Token, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TokenApprovalResponse) SetToken(v Token) {
	o.Token = v
}

// GetFromApprovedAmount returns the FromApprovedAmount field value
func (o *TokenApprovalResponse) GetFromApprovedAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromApprovedAmount
}

// GetFromApprovedAmountOk returns a tuple with the FromApprovedAmount field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetFromApprovedAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromApprovedAmount, true
}

// SetFromApprovedAmount sets field value
func (o *TokenApprovalResponse) SetFromApprovedAmount(v string) {
	o.FromApprovedAmount = v
}

// GetToApprovedAmount returns the ToApprovedAmount field value
func (o *TokenApprovalResponse) GetToApprovedAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToApprovedAmount
}

// GetToApprovedAmountOk returns a tuple with the ToApprovedAmount field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetToApprovedAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToApprovedAmount, true
}

// SetToApprovedAmount sets field value
func (o *TokenApprovalResponse) SetToApprovedAmount(v string) {
	o.ToApprovedAmount = v
}

// GetTransactionRequest returns the TransactionRequest field value
func (o *TokenApprovalResponse) GetTransactionRequest() TransactionRequest {
	if o == nil {
		var ret TransactionRequest
		return ret
	}

	return o.TransactionRequest
}

// GetTransactionRequestOk returns a tuple with the TransactionRequest field value
// and a boolean to check if the value has been set.
func (o *TokenApprovalResponse) GetTransactionRequestOk() (*TransactionRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionRequest, true
}

// SetTransactionRequest sets field value
func (o *TokenApprovalResponse) SetTransactionRequest(v TransactionRequest) {
	o.TransactionRequest = v
}

func (o TokenApprovalResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenApprovalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chainID"] = o.ChainID
	toSerialize["accountAddress"] = o.AccountAddress
	toSerialize["spenderAddress"] = o.SpenderAddress
	toSerialize["token"] = o.Token
	toSerialize["fromApprovedAmount"] = o.FromApprovedAmount
	toSerialize["toApprovedAmount"] = o.ToApprovedAmount
	toSerialize["transactionRequest"] = o.TransactionRequest
	return toSerialize, nil
}

func (o *TokenApprovalResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chainID",
		"accountAddress",
		"spenderAddress",
		"token",
		"fromApprovedAmount",
		"toApprovedAmount",
		"transactionRequest",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenApprovalResponse := _TokenApprovalResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenApprovalResponse)

	if err != nil {
		return err
	}

	*o = TokenApprovalResponse(varTokenApprovalResponse)

	return err
}

type NullableTokenApprovalResponse struct {
	value *TokenApprovalResponse
	isSet bool
}

func (v NullableTokenApprovalResponse) Get() *TokenApprovalResponse {
	return v.value
}

func (v *NullableTokenApprovalResponse) Set(val *TokenApprovalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenApprovalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenApprovalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenApprovalResponse(val *TokenApprovalResponse) *NullableTokenApprovalResponse {
	return &NullableTokenApprovalResponse{value: val, isSet: true}
}

func (v NullableTokenApprovalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenApprovalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


