/*
Blockdaemon DeFi API

The Blockdaemon DeFi API provides a single interface to a multitude of DeFi projects and blockchains

API version: 1.0.0
Contact: info@blockdaemon.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StatusChainDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusChainDetail{}

// StatusChainDetail Details about a transaction on a specific chain.
type StatusChainDetail struct {
	Status StatusEnum `json:"status"`
	// The hash of a transaction or block.
	TxHash string `json:"txHash"`
	// A link to a block explorer for a transaction or address.
	ExplorerLink string `json:"explorerLink"`
	// The unique identifier of a blockchain in CAIP-2 notation.
	ChainID string `json:"chainID" validate:"regexp=^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}$"`
	Extensions map[string]map[string]interface{} `json:"extensions,omitempty"`
}

type _StatusChainDetail StatusChainDetail

// NewStatusChainDetail instantiates a new StatusChainDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusChainDetail(status StatusEnum, txHash string, explorerLink string, chainID string) *StatusChainDetail {
	this := StatusChainDetail{}
	this.Status = status
	this.TxHash = txHash
	this.ExplorerLink = explorerLink
	this.ChainID = chainID
	return &this
}

// NewStatusChainDetailWithDefaults instantiates a new StatusChainDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusChainDetailWithDefaults() *StatusChainDetail {
	this := StatusChainDetail{}
	return &this
}

// GetStatus returns the Status field value
func (o *StatusChainDetail) GetStatus() StatusEnum {
	if o == nil {
		var ret StatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *StatusChainDetail) GetStatusOk() (*StatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *StatusChainDetail) SetStatus(v StatusEnum) {
	o.Status = v
}

// GetTxHash returns the TxHash field value
func (o *StatusChainDetail) GetTxHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value
// and a boolean to check if the value has been set.
func (o *StatusChainDetail) GetTxHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHash, true
}

// SetTxHash sets field value
func (o *StatusChainDetail) SetTxHash(v string) {
	o.TxHash = v
}

// GetExplorerLink returns the ExplorerLink field value
func (o *StatusChainDetail) GetExplorerLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExplorerLink
}

// GetExplorerLinkOk returns a tuple with the ExplorerLink field value
// and a boolean to check if the value has been set.
func (o *StatusChainDetail) GetExplorerLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExplorerLink, true
}

// SetExplorerLink sets field value
func (o *StatusChainDetail) SetExplorerLink(v string) {
	o.ExplorerLink = v
}

// GetChainID returns the ChainID field value
func (o *StatusChainDetail) GetChainID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainID
}

// GetChainIDOk returns a tuple with the ChainID field value
// and a boolean to check if the value has been set.
func (o *StatusChainDetail) GetChainIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainID, true
}

// SetChainID sets field value
func (o *StatusChainDetail) SetChainID(v string) {
	o.ChainID = v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *StatusChainDetail) GetExtensions() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Extensions) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusChainDetail) GetExtensionsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extensions) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *StatusChainDetail) HasExtensions() bool {
	if o != nil && !IsNil(o.Extensions) {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given map[string]map[string]interface{} and assigns it to the Extensions field.
func (o *StatusChainDetail) SetExtensions(v map[string]map[string]interface{}) {
	o.Extensions = v
}

func (o StatusChainDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusChainDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["txHash"] = o.TxHash
	toSerialize["explorerLink"] = o.ExplorerLink
	toSerialize["chainID"] = o.ChainID
	if !IsNil(o.Extensions) {
		toSerialize["extensions"] = o.Extensions
	}
	return toSerialize, nil
}

func (o *StatusChainDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"txHash",
		"explorerLink",
		"chainID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatusChainDetail := _StatusChainDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStatusChainDetail)

	if err != nil {
		return err
	}

	*o = StatusChainDetail(varStatusChainDetail)

	return err
}

type NullableStatusChainDetail struct {
	value *StatusChainDetail
	isSet bool
}

func (v NullableStatusChainDetail) Get() *StatusChainDetail {
	return v.value
}

func (v *NullableStatusChainDetail) Set(val *StatusChainDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusChainDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusChainDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusChainDetail(val *StatusChainDetail) *NullableStatusChainDetail {
	return &NullableStatusChainDetail{value: val, isSet: true}
}

func (v NullableStatusChainDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusChainDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


